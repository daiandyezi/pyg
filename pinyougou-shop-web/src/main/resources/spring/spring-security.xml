<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
			 xmlns:beans="http://www.springframework.org/schema/beans"
			 xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">


	<!-- security="none" 设置不登录也可以访问路径 -->
	<http pattern="/*.html" security="none"></http>
	<http pattern="/css/**" security="none"></http>
	<http pattern="/img/**" security="none"></http>
	<http pattern="/js/**" security="none"></http>
	<http pattern="/favicon.ico" security="none"></http>
	<http pattern="/plugins/**" security="none"></http>
	<!-- 商家入驻申请 -->
	<http pattern="/seller/add.do" security="none"></http>


	<!-- <beans:beans非默认
         security:是默认前缀
     -->

	<!-- 页面拦截规则 -->
	<!--
        /**:拦截所有路径
        access:角色 必须以ROLE_开头
        use-expressions:是否启动SPEL表达式,默认为true开启,开启后access应该为 access="hasRole('ROLE_USER')"


    -->
	<http use-expressions="false">
		<!-- 当前用户必须有ROLE_USER的角色  才可以访问/**-->
		<intercept-url pattern="/**" access="ROLE_SELLER"/>
		<!-- 开启表单登录功能
            系统会默认提供一个简单的登录页面
            并且默认表单提交属性为:username,password
            默认action提交地址为:/login
            表单必须以post方式提交
            login-page:使用自己写的登录页面
            default-target-url:登录成功默认跳转地址
            authentication-failure-url:登录失败跳转地址

            localhost 将您重定向的次数过多问题:/** ==> /login.html ==> /** ==> 死循环
         -->
		<form-login login-page="/shoplogin.html" default-target-url="/admin/index.html" authentication-failure-url="/shoplogin.html" always-use-default-target="true"/>

		<headers>
			<frame-options policy="SAMEORIGIN"/>
		</headers>
		<csrf disabled="true"/><!-- 关闭csrf 跨站请求伪造-->
		<logout />
	</http>


	<!-- 认证管理器 -->
	<!--
        authentication-manager:认证管理者
        authentication-provider:认证提供者,提供认证服务
        user-service:用户服务


        <user name="admin" password="123456" authorities="ROLE_USER"/>
            给用户绑定设置密码以及绑定角色,当绑定的角色为ROLE_USER时,admin用户就拥有ROLE_USER的权限,可以访问/**路径
            一个用户可以有多个角色,一个角色也可以对应多个用户

     -->
	<authentication-manager>
		<authentication-provider user-service-ref="userDetailService">
			<password-encoder ref="passwordEncoder"></password-encoder>
		</authentication-provider>
	</authentication-manager>

	<!-- 认证类 -->
	<beans:bean id="userDetailService" class="com.pinyougou.service.UserDetailsServiceImpl">
		<beans:property name="sellerService" ref="sellerService"></beans:property>
	</beans:bean>


	<!-- 引用dubbo 服务 -->
	<dubbo:application name="pinyougou-shop-web" /><!-- 指定名称 -->
	<dubbo:registry address="zookeeper://192.168.25.134:2181"/><!-- 连接到注册中心 -->
	<dubbo:reference id="sellerService" interface="com.pinyougou.sellergoods.service.SellerService"></dubbo:reference><!-- 类似于一个bean -->



	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></beans:bean>









</beans:beans>